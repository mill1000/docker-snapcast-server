name: Publish Docker Images

on:
  push:
    branches: ["main"]
    tags: ["*"]

  pull_request:
    branches: ["main"]

# Kill existing jobs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mill1000/snapcast-server

jobs:
  build-and-push-platform-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    outputs:
      digest-linux-amd64: ${{ steps.digests.outputs.digests-linux-amd64 }}
      digest-linux-arm-v7: ${{ steps.digests.outputs.digests-linux-arm-v7 }}
      digest-linux-arm64: ${{ steps.digests.outputs.digests-linux-arm64 }}

    strategy:
      fail-fast: false
      matrix:
        platform:
          - "linux/amd64"
          - "linux/arm/v7"
          - "linux/arm64"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.platform }}

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v5
        id: build
        with:
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,"name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}",push-by-digest=true,name-canonical=true,push=true

      - name: Generate output
        id: digests
        run: |
          PLATFORM="${{ matrix.platform }}"
          DIGEST="${{ steps.build.outputs.digest }}"
          echo "digests-${PLATFORM//\//-}=${DIGEST}" >> "$GITHUB_OUTPUT"

  build-and-push-multi-arch-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    needs: [build-and-push-platform-image]

    steps:
      - run: echo '${{ toJSON(needs.build-and-push-platform-image.outputs) }}'

      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # Generate tags for latest commit and PRs
          tags: |
            type=raw,enable=${{ github.ref == 'refs/heads/main' }},value=latest
            type=ref,event=pr

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          DIGESTS='${{ toJSON(needs.build-and-push-platform-image.outputs) }}'
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
          $(jq -cr 'map("${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@" + .) | join(" ")' <<< "$DIGESTS")

      - run: |
          docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
